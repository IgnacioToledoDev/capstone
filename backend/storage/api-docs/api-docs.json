{
    "openapi": "3.0.0",
    "info": {
        "title": "APIs For Thrift Store",
        "version": "1.0.0"
    },
    "paths": {
        "/api/jwt/cars/brands/all": {
            "get": {
                "tags": [
                    "Car Brands"
                ],
                "summary": "Obtener todas las marcas de autos",
                "description": "Este endpoint permite obtener una lista de todas las marcas de autos. Requiere autenticaci√≥n JWT.",
                "operationId": "cd80ab1043c99e4d9154ef2771cbd370",
                "responses": {
                    "200": {
                        "description": "Marcas de autos obtenidas exitosamente."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/cars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Obtener lista de autos del usuario autenticado",
                "description": "Este endpoint devuelve la lista de autos pertenecientes al usuario autenticado.",
                "operationId": "c27dbd18300b7c33331f0d68674caffc",
                "responses": {
                    "200": {
                        "description": "Lista de autos recuperada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "cars": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "patent": {
                                                                "type": "string",
                                                                "example": "ABC123"
                                                            },
                                                            "brand": {
                                                                "type": "string",
                                                                "example": "Toyota"
                                                            },
                                                            "model": {
                                                                "type": "string",
                                                                "example": "Corolla"
                                                            },
                                                            "year": {
                                                                "type": "integer",
                                                                "example": 2015
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cars retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No autorizado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/cars/create": {
            "post": {
                "tags": [
                    "Cars"
                ],
                "summary": "Create a new car",
                "operationId": "ba8cc46b680a23a2980f6da2455c22cc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brand_id",
                                    "model",
                                    "year",
                                    "user_id"
                                ],
                                "properties": {
                                    "brand_id": {
                                        "description": "ID of the car brand",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "model_id": {
                                        "description": "Model of the car",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "patent": {
                                        "description": "Patent of the car",
                                        "type": "string",
                                        "example": "kbtd92"
                                    },
                                    "owner_id": {
                                        "description": "Id of the owner",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "year": {
                                        "description": "Year of the car",
                                        "type": "integer",
                                        "example": 2024
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "car": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "brand_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "model_id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "year": {
                                                    "type": "integer",
                                                    "example": 2024
                                                },
                                                "owner_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-17T02:42:18Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-17T02:42:18Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/cars/{patent}": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Retrieve car by patent",
                "description": "Returns car details based on the patent provided.",
                "operationId": "getCarByPatent",
                "parameters": [
                    {
                        "name": "patent",
                        "in": "path",
                        "description": "Patent of the car to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ABC123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "JWT Token not found or is not valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "JWT Token not found or is not valid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/cars/models/all": {
            "get": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Obtener todos los modelos de autos",
                "description": "Este endpoint permite obtener una lista de todos los modelos de autos. Requiere autenticaci√≥n JWT.",
                "operationId": "bc7a5e9f2bb6080a918ce81ad6f9b03b",
                "responses": {
                    "200": {
                        "description": "Modelos de autos obtenidas exitosamente."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/cars/models/all/{brandId}": {
            "get": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Obtener todos los modelos de autos por marca de auto",
                "description": "Este endpoint permite obtener una lista de todos los modelos de autos asociados a una marca espec√≠fica. Requiere autenticaci√≥n JWT.",
                "operationId": "5fa6a54e0ddf94be0b5453741744fecb",
                "parameters": [
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "ID de la marca de auto",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Modelos de autos obtenidos exitosamente."
                    },
                    "404": {
                        "description": "Marca de auto no encontrada."
                    },
                    "401": {
                        "description": "No autorizado."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/contactTypes": {
            "get": {
                "tags": [
                    "Contacto"
                ],
                "summary": "Obtener todos los tipos de contacto",
                "operationId": "365ca0c9d9f7929dacf291c162f19c44",
                "responses": {
                    "200": {
                        "description": "Tipos de contacto recuperados exitosamente.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "contactTypes": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Tel√©fono"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "retrieved contact types successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error message"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/maintenance/calendar": {
            "get": {
                "tags": [
                    "Maintenances"
                ],
                "summary": "Obtiene el calendario de mantenimientos y clientes actuales para el mec√°nico autenticado",
                "operationId": "697da6dd5f12e4f8c6432f9a875ccfbc",
                "responses": {
                    "200": {
                        "description": "Calendario y clientes actuales obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "calendar": {
                                                    "description": "Lista de mantenimientos del d√≠a actual",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "car_id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "start_maintenance": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-10-03 10:00:00"
                                                            },
                                                            "mechanic_id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Cambio de aceite"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current": {
                                                    "description": "Lista de clientes actuales basados en el mantenimiento en curso",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Juan P√©rez"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "juan.perez@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No autenticado o token no v√°lido",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error en la petici√≥n o falta de datos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "maintenance start_maintenance no available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/maintenance/update/current-client": {
            "get": {
                "tags": [
                    "Maintenances"
                ],
                "summary": "Actualizar el cliente actual del usuario autenticado",
                "description": "Este endpoint actualiza el cliente actual para el usuario autenticado y devuelve la informaci√≥n del cliente actualizado.",
                "operationId": "updateCurrentClient",
                "responses": {
                    "200": {
                        "description": "Cliente actualizado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "current": {
                                                    "description": "Informaci√≥n del cliente actual",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john.doe@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Calendar retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No autenticado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error del servidor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/maintenance/create": {
            "post": {
                "tags": [
                    "Maintenances"
                ],
                "summary": "Register a new maintenance record",
                "operationId": "79164cffac87e0c94805703d7c3a4bda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "carId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "recommendation_action": {
                                        "type": "string",
                                        "example": "Cambio de aceite y filtro"
                                    },
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "id": 1
                                            },
                                            {
                                                "id": 2
                                            }
                                        ]
                                    },
                                    "startNow": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Maintenance saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "maintenance": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Mantenimiento preventivo"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Cambio de aceite y revisi√≥n general"
                                                },
                                                "status_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "car_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "mechanic_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "pricing": {
                                                    "type": "number",
                                                    "example": 12050
                                                },
                                                "start_maintenance": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-10T10:00:00Z"
                                                },
                                                "end_maintenance": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-10-10T12:00:00Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-30T10:45:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-30T10:45:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maintenanceDetails": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "maintenance_id": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "service_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "quotation_id": {
                                                        "type": "integer",
                                                        "example": null
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-09-30T10:45:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "JWT not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT not authenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service or mechanic not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service or mechanic not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Maintenance not saved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance not saved."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/maintenance/historical": {
            "get": {
                "tags": [
                    "Mechanic"
                ],
                "summary": "Get maintenance history for authenticated mechanic",
                "description": "Retrieve the maintenance history of the authenticated mechanic, ordered by the start of the maintenance in descending order.",
                "operationId": "3485d20c58d05568291951b1cee308fe",
                "responses": {
                    "200": {
                        "description": "Historial retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not found or unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mechanic not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "mechanic not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/maintenance/historical/{id}": {
            "get": {
                "tags": [
                    "Mechanic"
                ],
                "summary": "Get detailed maintenance history for a specific maintenance ID",
                "description": "Retrieve detailed historical information for a specific maintenance record, including details of the car and client.",
                "operationId": "3490c1e4d52a0899801ecaf850d37eb2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the maintenance record to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Historial retrieved successfully"
                    },
                    "401": {
                        "description": "User not found or unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Maintenance not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "maintenance not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/maintenance/{maintenanceId}/status": {
            "get": {
                "tags": [
                    "Maintenances"
                ],
                "summary": "Obtener el estado de un mantenimiento",
                "description": "Devuelve el estado de un mantenimiento espec√≠fico por su ID.",
                "operationId": "6116a882284a70e70b6d1cbd560aa7fa",
                "parameters": [
                    {
                        "name": "maintenanceId",
                        "in": "path",
                        "description": "ID del mantenimiento que se desea consultar.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estado del mantenimiento recuperado exitosamente."
                    },
                    "404": {
                        "description": "Mantenimiento no encontrado.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "maintenance not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/maintenance/{maintenanceId}/status/next": {
            "post": {
                "tags": [
                    "Maintenances"
                ],
                "summary": "Cambiar el estado de un mantenimiento",
                "description": "Cambia el estado de un mantenimiento espec√≠fico por su ID.",
                "operationId": "78d35d5985611a3d9710bc506514da6e",
                "parameters": [
                    {
                        "name": "maintenanceId",
                        "in": "path",
                        "description": "ID del mantenimiento cuyo estado se desea cambiar.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estado del mantenimiento cambiado exitosamente."
                    },
                    "404": {
                        "description": "Mantenimiento no encontrado.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "maintenance not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/maintenanceDetails/{maintenanceId}": {
            "get": {
                "tags": [
                    "Maintenances"
                ],
                "summary": "Obtener detalles de una mantenci√≥n espec√≠fica",
                "description": "Este endpoint permite obtener los detalles de una mantenci√≥n, incluyendo informaci√≥n del veh√≠culo, del due√±o y los servicios realizados.",
                "operationId": "92624b1b48d00098ca03c6b95a72ffe0",
                "parameters": [
                    {
                        "name": "maintenanceId",
                        "in": "path",
                        "description": "ID de la mantenci√≥n",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detalles obtenidos con √©xito",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "owner": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john.doe@example.com"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+1234567890"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "services": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "string",
                                                        "example": "Cambio de aceite",
                                                        "property": null
                                                    }
                                                },
                                                "car": {
                                                    "properties": {
                                                        "patent": {
                                                            "type": "string",
                                                            "example": "ABC123"
                                                        },
                                                        "brand": {
                                                            "type": "string",
                                                            "example": "Toyota"
                                                        },
                                                        "model": {
                                                            "type": "string",
                                                            "example": "Corolla"
                                                        },
                                                        "year": {
                                                            "type": "integer",
                                                            "example": 2020
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Get all data successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Usuario no autenticado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mantenci√≥n o veh√≠culo no encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance or car not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/quotations/create": {
            "post": {
                "tags": [
                    "Quotations"
                ],
                "summary": "Crear una cotizaci√≥n",
                "description": "Este endpoint crea una nueva cotizaci√≥n para un auto, incluyendo los servicios solicitados y su estado de aprobaci√≥n.",
                "operationId": "022894ef495ded902bab5f14b82a94b5",
                "requestBody": {
                    "description": "Datos para crear una cotizaci√≥n",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "carId",
                                    "services"
                                ],
                                "properties": {
                                    "carId": {
                                        "description": "ID del auto al cual se le crea la cotizaci√≥n",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "services": {
                                        "description": "Lista de servicios solicitados",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "serviceId": {
                                                    "description": "ID del servicio",
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "isApproved": {
                                                    "description": "Si el servicio es aprobado por el cliente",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "status": {
                                        "description": "Estado de la cotizaci√≥n (aprobada o no)",
                                        "type": "integer",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cotizaci√≥n creada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error de autenticaci√≥n o de validaci√≥n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/quotations/{quotationId}": {
            "get": {
                "tags": [
                    "Quotations"
                ],
                "summary": "Obtiene detalles de una cotizaci√≥n",
                "description": "Devuelve la informaci√≥n de una cotizaci√≥n espec√≠fica, incluyendo el auto, los servicios aprobados por el cliente y los servicios no aprobados.",
                "operationId": "4174e5d189b35eedde57c0e4f2bc93dd",
                "parameters": [
                    {
                        "name": "quotationId",
                        "in": "path",
                        "description": "ID de la cotizaci√≥n",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cotizaci√≥n obtenida exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "car": {
                                            "description": "Detalles del auto",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "make": {
                                                    "type": "string",
                                                    "example": "Toyota"
                                                },
                                                "model": {
                                                    "type": "string",
                                                    "example": "Corolla"
                                                },
                                                "year": {
                                                    "type": "integer",
                                                    "example": 2020
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "quotation": {
                                            "description": "Detalles de la cotizaci√≥n",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "total_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1500.75
                                                },
                                                "car_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "servicesApprovedByClient": {
                                            "description": "Servicios aprobados por el cliente",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Cambio de aceite"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Cambio de aceite del motor"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "servicesNotApprovedByClient": {
                                            "description": "Servicios no aprobados por el cliente",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 11
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Cambio de neum√°ticos"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Cambio de los neum√°ticos delanteros"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 1500.75
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error de autenticaci√≥n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "not user found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recurso no encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/quotations/": {
            "get": {
                "tags": [
                    "Quotations"
                ],
                "summary": "Obtener todas las cotizaciones de los veh√≠culos del usuario autenticado",
                "description": "Este endpoint recupera todas las cotizaciones asociadas con los veh√≠culos de propiedad del usuario autenticado. Devuelve un array de cotizaciones para cada veh√≠culo.",
                "operationId": "68ecad39957c860b05160d8d02ca98c9",
                "responses": {
                    "200": {
                        "description": "Cotizaciones recuperadas con √©xito."
                    },
                    "401": {
                        "description": "No autorizado. Usuario no autenticado.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No autenticado."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ocurri√≥ un error al recuperar las cotizaciones."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/quotations/{quotationId}/approve": {
            "patch": {
                "tags": [
                    "Quotations"
                ],
                "summary": "Aprobar una cotizaci√≥n",
                "description": "Este endpoint permite al cliente aprobar una cotizaci√≥n espec√≠fica utilizando su ID. Al aprobar, se actualiza el estado de la cotizaci√≥n para indicar que ha sido aprobada por el cliente.",
                "operationId": "23fdb0bfb330c3e9a80cf595d115080a",
                "parameters": [
                    {
                        "name": "quotationId",
                        "in": "path",
                        "description": "ID de la cotizaci√≥n que se desea aprobar.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cotizaci√≥n aprobada con √©xito."
                    },
                    "404": {
                        "description": "Cotizaci√≥n no encontrada.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cotizaci√≥n no encontrada."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No autorizado. Usuario no autenticado.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No autenticado."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ocurri√≥ un error al aprobar la cotizaci√≥n."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/reservation/create": {
            "post": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Crear una nueva reservaci√≥n",
                "description": "Crea una nueva reservaci√≥n para el veh√≠culo especificado y opcionalmente configura un recordatorio.",
                "operationId": "97512533f516a348b7e9186b41bcf4a6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reservationDate",
                                    "carId"
                                ],
                                "properties": {
                                    "reservationDate": {
                                        "description": "Fecha y hora de la reservaci√≥n en formato d-m-Y H:i",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-10-15 14:30"
                                    },
                                    "carId": {
                                        "description": "ID del veh√≠culo para la reservaci√≥n",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "wantReminder": {
                                        "description": "Si el usuario desea un recordatorio",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "typeReminder": {
                                        "description": "Tipo de recordatorio si se solicita",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "mechanicId": {
                                        "description": "ID del mec√°nico a notificar",
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservaci√≥n creada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "reservation": {
                                                    "type": "object"
                                                },
                                                "reminder": {
                                                    "type": "string",
                                                    "example": "Sera enviado a traves de correo email (Por defecto)"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "reservation created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error de validaci√≥n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "description": "Detalles de los errores de validaci√≥n",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/services/": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Obtener todos los servicios",
                "description": "Este endpoint permite obtener una lista de todos los servicios. Requiere autenticaci√≥n JWT.",
                "operationId": "94304c1a282bf1c75c7b19084f7456f7",
                "responses": {
                    "200": {
                        "description": "Servicios obtenidos exitosamente."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/services/types": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Obtener todos los nombres de los tipos de servicios",
                "description": "Este endpoint permite obtener una lista de todos los nombres de los tipos servicios. Requiere autenticaci√≥n JWT.",
                "operationId": "af6af5871927c4d90ea5450de026c104",
                "responses": {
                    "200": {
                        "description": "Nombre de los tipos servicios obtenidos exitosamente."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Log in a user in the app",
                "operationId": "cbcdf752632d9bad1c2a32a5c98dbd7d",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/api/users/recovery": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Send a email to recovery password",
                "operationId": "7770d90a94de1078d94fc53c61e59699",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/api/users/reset": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Reset user's password",
                "operationId": "c581e74581e922af02352d0737d90871",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "c_password",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "c_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "abcdef123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jwt/client/register": {
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Register a new client",
                "operationId": "f6a1e44d2262de3354b613b0b08f9eac",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "name",
                                    "lastname",
                                    "rut"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Client's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "client@example.com"
                                    },
                                    "name": {
                                        "description": "Client's first name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastname": {
                                        "description": "Client's last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "rut": {
                                        "description": "Client's RUT",
                                        "type": "string",
                                        "example": "12345678-9"
                                    },
                                    "phone": {
                                        "description": "Client's phone",
                                        "type": "string",
                                        "example": "986415709"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "client": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "client@example.com"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "lastname": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "rut": {
                                                    "type": "string",
                                                    "example": "12345678-9"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-17T02:42:18Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-09-17T02:42:18Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You need to sign in first."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict due to existing email or invalid RUT",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already registered or Rut invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/logout": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Logout the authenticated user",
                "description": "Invalidates the user's JWT token, effectively logging them out from the system.",
                "operationId": "d7379a8fe639b99816d72ece2fcf5b52",
                "responses": {
                    "200": {
                        "description": "User logged out successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to log out.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to log out."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/mechanic/{mechanicId}/setScore": {
            "post": {
                "tags": [
                    "Mechanic"
                ],
                "summary": "Asigna una puntuaci√≥n y un comentario a un mec√°nico",
                "description": "Permite que un usuario autenticado asigne una puntuaci√≥n de 1 a 5 y un comentario a un mec√°nico espec√≠fico.",
                "operationId": "6e79f6605b40a724f287d01d80f95138",
                "parameters": [
                    {
                        "name": "mechanicId",
                        "in": "path",
                        "description": "ID del mec√°nico al cual se le va a asignar la puntuaci√≥n.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Puntuaci√≥n y comentario para el mec√°nico",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "score": {
                                        "description": "Puntuaci√≥n a asignar al mec√°nico (debe estar entre 1 y 5).",
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 4
                                    },
                                    "comment": {
                                        "description": "Comentario opcional sobre el servicio del mec√°nico.",
                                        "type": "string",
                                        "example": "Excelente trabajo y muy profesional."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Puntuaci√≥n y comentario asignados con √©xito",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mechanic score updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "mechanic": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "score": {
                                                            "type": "integer",
                                                            "example": 4
                                                        },
                                                        "comment": {
                                                            "type": "string",
                                                            "example": "Excelente trabajo y muy profesional."
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You need to sign in first."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Solicitud incorrecta",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Score must be between 1 and 5."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "El usuario no es un mec√°nico",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is not mechanic."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/jwt/mechanic/all": {
            "get": {
                "tags": [
                    "Mechanic"
                ],
                "summary": "Obtener todos los mec√°nicos",
                "description": "Este endpoint permite obtener una lista de todos los usuarios con el rol de mec√°nico. El usuario debe estar autenticado para acceder a esta informaci√≥n.",
                "operationId": "1fe6de49fbcf150cf868a69786b8986b",
                "responses": {
                    "200": {
                        "description": "Lista de todos los mec√°nicos obtenida con √©xito",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "mechanics": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "johndoe@example.com"
                                                            },
                                                            "phone": {
                                                                "type": "string",
                                                                "example": "+123456789"
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "mechanic"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All mechanics retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You need to sign in first."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "401": {
                "description": "Token JWT no encontrado o no v√°lido.",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "JWT Token no found o is not valid"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Car Brands",
            "description": "Car Brands"
        },
        {
            "name": "Cars",
            "description": "Cars"
        },
        {
            "name": "Car Models",
            "description": "Car Models"
        },
        {
            "name": "Contacto",
            "description": "Contacto"
        },
        {
            "name": "Maintenances",
            "description": "Maintenances"
        },
        {
            "name": "Mechanic",
            "description": "Mechanic"
        },
        {
            "name": "Quotations",
            "description": "Quotations"
        },
        {
            "name": "Reservations",
            "description": "Reservations"
        },
        {
            "name": "Services",
            "description": "Services"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Clients",
            "description": "Clients"
        }
    ]
}